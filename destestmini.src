; destestmini.src

; Author: Matthew Desmond (matt@factorofmatt.com)

; Very simple boot-rom for max mode that simply toggles the 6510 IO register so that
; we can verify if the 6510 is executing instructions.
; This program can run on the bare minimum of C64 hardware:
;     The CIAs, ROMs, RAM, Colour RAM and SID are not required.

; If you have a 1530/C2N datassette then simply attatch it, plug in your new cartridge, power on your C64 and
; press PLAY.  No cassette is necessary.  If the cassette drive sprocket spins for a second then stops for a
; second repeatedly then your C64 is indeed executing instructions.

; If you don't have a datassette then you can probe the cassette interface directly with a multimeter.  Measure
; the voltage between the GND (left most conductor when looking from behind, top or bottom) and WRITE (second
; conductor from the right when looking from behind, top or bottom). If the voltage swaps between 0 volts and
; about 3-5 volts each for 1 second repeatedly then your C64 is executing instructions.

; Alternatively you can attach and LED and 390R resistor between the GND and MOTOR conductors.  The LED has to be
; attached between the GND and MOTOR conductors in the correct polarity.  The cathode (short-leg, flat-side) of
; the LED should attach to the GND conductor and the anode (long-leg) of the LED should attach via the resistor
; to the MOTOR conductor.
; Note 1: the resistor can attach to either the cathode or anode.
; Note 2: the WRITE signal can also be used however it is connected directly to the 6510 and won't supply as
;         much current to light the LED.
; Note 3: The value for the resistor (390R) should work for most red LEDs, but can be substitued as necessary
; for different LEDs.  The voltage of the MOTOR signal is about 10V with no load.

;    1 2 3 4 5 6   C64 cassette-port (viewed from the rear)
;    -----------  
;    A B C D E F   The top and bottom conductors carry the same signals.  
;
;    F-6 SENSE   x  
;    E-5 WRITE   x  
;    D-4 READ    x   390R  
;    C-3 MOTOR   o--/\/\/\----|  
;    B-2 +5V     x   | /|     |  
;    A-1 GND     o---|< |-----|  
;                  - | \| +  
;                     LED  
;
; You can use small crocodile or alligator clip to attach to the GND and WRITE, just be sure to only touch the
; copper trace (top and bottom) of the signal you are after.
;
; If you wish to make your LED fixture more permanent you can buy a 5-pin 0.156-inch edge connector from your
; favourite online electronic components retailer. Simply solder the LED/resistor to the appropriate pins on
; the edge connector.  Be sure to clearly write the word "TOP" on your new fixture as plugging it in upside-down
; may cause damage to your 6510.


        ifnconst TRY_VIC
TRY_VIC         equ 1 ; flash the screen (set to 0 to disable)
        endif
        ifnconst TRY_SID
TRY_SID         equ 1 ; make some noise (set to 0 to disable)
        endif

tone1           equ 1804 ; A-3
tone2           equ 3608 ; A-4
delay_time      equ 10 ; 10 x 100ms is about a second

                processor 6502

                ; delay for some multiple of 100 milliseconds
                mac delay100ms ; <number>. kills a, x and y
                ldy #{1}
.delay_loop_y   ldx #80
.delay_loop_x1  txa
                ldx #255
.delay_loop_x2  dex
                bne .delay_loop_x2
                tax
                dex
                bne .delay_loop_x1
                dey
                bne .delay_loop_y
                endm

                org $e000 ; start where the MAX mode maps /ROMH

START           sei
                ldx #$ff
                txs ; good practice but we're not going to be needing the stack
                cld
                lda #%00101111 ; loram, hiram, charen, cass-write, cass-motor OUT, cass-sense IN
                sta $0 ; set DDR
                lda #%00110111 ; VIC bank 0, I/O enabled, cass-write 0, cass-motor 1 (off)

        if TRY_VIC == 1
                lda #$00
                sta $d020 ; border
                lda #%00000000
                sta $d011 ; blank screen
        endif
        if TRY_SID == 1
                lda #%00000000 ; fast attack/decay
                sta $d405
                lda #%11110000 ; high sustain, fast release
                sta $d406
                lda #%00100000 ; sawtooth, no gate
                sta $d404
                lda #%10001111 ; no filters, volume 15
                sta $d418
        endif
forever         ; part 1
                lda $1
                ora #%00101000 ; set cass-write and cass-motor to 1
                sta $1
        if TRY_VIC
                lda #$00
                sta $d020
        endif
        if TRY_SID
                lda #<tone1
                sta $d400 ; voice 1 freq lsb = 0
                lda #>tone1
                sta $d401
                lda #%00100001 ; sawtooth, gate
                sta $d404
        endif
                delay100ms delay_time ; about a second

                ; part 2
                lda $1
                and #%11010111 ; set cass-write and cass-motor to 0
                sta $1
        if TRY_VIC
                lda #$01
                sta $d020
        endif
        if TRY_SID
                lda #<tone2
                sta $d400 ; voice 1 freq lsb = 0
                lda #>tone2
                sta $d401
                lda #%00100001 ; sawtooth, gate
                sta $d404
        endif
                delay100ms delay_time ; about a second

                jmp forever

                org $fffa
                DC.w START ; nmi - just restart
                DC.w START ; boot
                DC.w START ; irq - just restart
